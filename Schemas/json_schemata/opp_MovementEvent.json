{
  "$id": "https://ERJU/opp_MovementEvent",
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "infra.TopologicalCoordinate": {
      "type": "object",
      "description": "Defines a topological coordinate on the track",
      "properties": {
        "onLinearElement": {
          "type": "string",
          "description": "is positioned on linear element"
        },
        "offsetFromOrigin": {
          "type": "integer",
          "minimum": 0,
          "description": "position on the associated NetElement"
        }
      },
      "required": [
        "onLinearElement"
      ],
      "additionalProperties": false
    },
    "infra.NetPointReference": {
      "type": "object",
      "description": "Represents a point reference in the network.",
      "properties": {
        "hasTopoCoordinate": {
          "type": "object",
          "$ref": "#/definitions/infra.TopologicalCoordinate",
          "description": "Defines the topological coordinate of a network point reference"
        },
        "appliesToDirection": {
          "type": "string",
          "enum": [
            "both",
            "same",
            "opposite"
          ],
          "description": "The direction relative to the origin of the linear element towards the point reference applies"
        }
      },
      "required": [
        "hasTopoCoordinate"
      ],
      "additionalProperties": false
    },
    "opp.TrainUnitActivity": {
      "type": "object",
      "description": "Defines, what happens with the rolling stock at this location.",
      "properties": {
        "trainUnitActivityType": {
          "type": "string",
          "enum": [
            "joinActivity",
            "splitActivity",
            "collectActivity",
            "dropActivity",
            "turnAroundActivity",
            "meetActivity",
            "otherActivity"
          ],
          "description": "Defines the train unit activity type"
        },
        "actualTrainUnitIndex": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the index of TrainUnit in OperationalMovement. operationalTrainUnits before the activity"
        },
        "targetTrainUnitIndex": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the index of TrainUnit in OperationalMovement. operationalTrainUnits after the activity"
        }
      },
      "additionalProperties": false
    },
    "opp.DoorActivity": {
      "type": "object",
      "description": "Defines which doors shall be open and how they shall be open.",
      "properties": {
        "openingDoorSide": {
          "type": "string",
          "enum": [
            "doorSideLeft",
            "doorSideRight",
            "doorSideBoth",
            "doorNoneSide",
            "doorSideUnknown"
          ],
          "description": "Defines the door opening side. noneSide if the doors are kept closed.noneSide if the doors are kept closed"
        },
        "centralisedOpening": {
          "type": "boolean",
          "description": "Defines if the doors can be centrally opened. true - centralised opening, false - opening by passengers/driver"
        },
        "automaticClosing": {
          "type": "boolean",
          "description": "Defines if automatic closing of doors is performed by ATO or not. True by ATO, false - without ATO"
        }
      },
      "additionalProperties": false
    },
    "opp.AdditionalEventTime": {
      "type": "object",
      "description": "Definestimes not required for ATO, but useful for CDAS (e.g. published arrival, plannedArrival etc.)",
      "properties": {
        "timeValue": {
          "type": "string",
          "format": "date-time",
          "description": "Defines the time value in UTC"
        },
        "timeType": {
          "type": "string",
          "enum": [
            "plannedArrival",
            "plannedDeparture",
            "plannedMinDwellTime",
            "publishedArrival",
            "publishedDeparture"
          ],
          "description": "Defines the time type for a stop description"
        }
      },
      "required": [
        "timeValue"
      ],
      "additionalProperties": false
    },
    "opp.StopDescription": {
      "type": "object",
      "description": "Defines activities to be implemented by the train when it stopps.",
      "properties": {
        "trainUnitActivities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/opp.TrainUnitActivity"
          },
          "description": "Defines the sequence of changes of TrainUnit during the stop"
        },
        "doorActivity": {
          "type": "object",
          "$ref": "#/definitions/opp.DoorActivity",
          "description": "Defines the door activity. If the attribute is not provided, the doors remain closed"
        },
        "relaxedCoupler": {
          "type": "boolean",
          "description": "Defines the state of coupler. true - request for coupler relaxation, false -not, see Q_Relaxed_Coupler in SS126"
        },
        "holdTrain": {
          "type": "boolean",
          "description": "Defines, that if the train shall be hold until the next update. See JP in SS126"
        },
        "scheduledDeparture": {
          "type": "string",
          "format": "date-time",
          "description": "Defines the scheduled departure time. see departure in SS126. In the last station it is 'end of mission', in UTC."
        },
        "scheduledMinDwellTime": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines if the train has to wait after actual arrival this number of seconds before departure. ActualEarliestDeparture = max(departure, arrival + minDwellTime) will be calculated by ATO-OB, see minDwellTime in SS126"
        },
        "additionalEventTimes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/opp.AdditionalEventTime"
          },
          "maxItems": 4,
          "description": "Defines the state of coupler. true - request for coupler relaxation, false -not, see Q_Relaxed_Coupler in SS126"
        }
      },
      "required": [
        "scheduledDeparture"
      ],
      "additionalProperties": false
    },
    "opp.OperationalEventRef": {
      "type": "object",
      "description": "Defines a reference to one of possible OperationalEvents (as a unit)",
      "properties": {
        "movementEvent": {
          "type": "string",
          "description": "refers a movement event including the movement plan"
        },
        "restrictionEvent": {
          "type": "string",
          "description": "Refers a restriction event including restriction plan"
        },
        "warningMeasureEvent": {
          "type": "string",
          "description": "Refers a warnning measure event including the warning plan"
        }
      },
      "oneOf": [
        {
          "type": "object",
          "required": [
            "movementEvent"
          ]
        },
        {
          "type": "object",
          "required": [
            "restrictionEvent"
          ]
        },
        {
          "type": "object",
          "required": [
            "warningMeasureEvent"
          ]
        }
      ],
      "additionalProperties": false
    }
  },
  "type": "object",
  "description": "Defines an operational activity on a specific point in space and time for a train run.",
  "properties": {
    "id": {
      "type": "string",
      "description": "Defines the Identity of the object; used for referencing"
    },
    "plannedType": {
      "type": "string",
      "enum": [
        "pass",
        "stop"
      ],
      "description": "Defines if stop or pass was planned"
    },
    "scheduledType": {
      "type": "string",
      "enum": [
        "pass",
        "stop"
      ],
      "description": "Defines if stop or pass is scheduled"
    },
    "alignment": {
      "type": "string",
      "enum": [
        "head",
        "center",
        "rear"
      ],
      "description": "Defines the train-alignment at position (head, center, end)"
    },
    "position": {
      "type": "object",
      "$ref": "#/definitions/infra.NetPointReference",
      "description": "Defines position on a linearElement for the movement event"
    },
    "pathToNextEvent": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Defines the path-part after the LinearElement of the position-value and beforethe linear element of the nextEvent (excluding). The path must be reconstructable without graph-search algorithms."
    },
    "stopDescription": {
      "type": "object",
      "$ref": "#/definitions/opp.StopDescription",
      "description": "Defines the stop description in case of a stop of the train"
    },
    "scheduledArrival": {
      "type": "string",
      "format": "date-time",
      "description": "Defines the scheduled arrival time. equal to scheduledDeparture for a passing train, see latestArrival inSS126. In the first station it is time of 'start of mission', in UTC"
    },
    "scheduledArrivalWindow": {
      "type": "integer",
      "minimum": 0,
      "description": "Defines the scheduled arrival window. scheduledEaliestArrival = scheduledArrival - scheduledArrivalWindow. For passing trains scheduledEarliestDeparture = scheduledEarliestArrival, see arrivalWindow in SS126. In the first station it is a time window for 'start of mission'."
    },
    "startsAfterEvents": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/opp.OperationalEventRef"
      },
      "description": "Defines the set of operational events, which must be finished before the current event starts."
    }
  },
  "required": [
    "id",
    "position",
    "scheduledArrival"
  ],
  "additionalProperties": false
}