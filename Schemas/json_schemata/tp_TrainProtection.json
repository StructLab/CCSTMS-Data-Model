{
  "$id": "https://ERJU/tp_TrainProtection",
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "infra.LinearElementSection": {
      "type": "object",
      "description": "Defines a directed linear object (with a linear extension) located on a LinearElement",
      "properties": {
        "onElement": {
          "type": "string",
          "description": "refers to linear element"
        },
        "startOffsetFromOrigin": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the start offset from the origin"
        },
        "endOffsetFromOrigin": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the end offset from the origin"
        },
        "appliesInBothDirections": {
          "type": "boolean",
          "description": "Defines if the section applies in both directions"
        }
      },
      "required": [
        "onElement"
      ],
      "additionalProperties": false
    },
    "tp.DriveProtectionSection": {
      "type": "object",
      "description": "Defines a DPS for a section of track",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identity of the object; used for referencing"
        },
        "name": {
          "type": "string"
        },
        "linearElementSection": {
          "type": "object",
          "$ref": "#/definitions/infra.LinearElementSection"
        },
        "maxFlankProtectionSpeed": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "id",
        "name",
        "linearElementSection"
      ],
      "additionalProperties": false
    },
    "tp.ProtectedInfraElement": {
      "type": "object",
      "properties": {
        "switch": {
          "type": "string"
        },
        "slipCrossing": {
          "type": "string"
        },
        "crossing": {
          "type": "string"
        },
        "derailer": {
          "type": "string"
        },
        "levelCrossing": {
          "type": "string"
        }
      },
      "oneOf": [
        {
          "type": "object",
          "required": [
            "switch"
          ]
        },
        {
          "type": "object",
          "required": [
            "slipCrossing"
          ]
        },
        {
          "type": "object",
          "required": [
            "crossing"
          ]
        },
        {
          "type": "object",
          "required": [
            "derailer"
          ]
        },
        {
          "type": "object",
          "required": [
            "levelCrossing"
          ]
        }
      ],
      "additionalProperties": false
    },
    "tp.DriveProtectionSectionGroup": {
      "type": "object",
      "description": "Defines the configuration of a DPS Group",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identity of the object; used for referencing"
        },
        "name": {
          "type": "string",
          "description": "User-friendly name, only if different from id"
        },
        "driveProtectionSections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tp.DriveProtectionSection"
          },
          "minItems": 1
        },
        "protectedInfraElements": {
          "type": "object",
          "$ref": "#/definitions/tp.ProtectedInfraElement"
        },
        "dependenciesType": {
          "type": "string",
          "enum": [
            "Exclusive",
            "Equivalent",
            "Specific"
          ],
          "description": "defines dependencies between n drive protection sections"
        },
        "dpsgDependencies": {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0
          },
          "description": "contains row-wise bit matrix with column = index of the element in DriveProtectionSectionGroup. 0 means not allowed to use ; 1 means allowed to use for rail traffic.Each line in the matrix contains a valid state of the DriveProtectionSectionGroup ; Use only if DPSDependencyType == Specific"
        },
        "runTime": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the total time required for the DPS(s) in a DPS Group to switch from one position to the other"
        }
      },
      "required": [
        "id",
        "driveProtectionSections",
        "protectedInfraElements"
      ],
      "additionalProperties": false
    },
    "tp.AllocationSection": {
      "type": "object",
      "description": "Defines an allocation section for a section of track",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identity of the object; used for referencing"
        },
        "name": {
          "type": "string",
          "description": "User-friendly name, only if different from id"
        },
        "linearReference": {
          "type": "object",
          "$ref": "#/definitions/infra.NetLinearReference"
        },
        "dependencies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "is dependent on the allocation sections"
        }
      },
      "required": [
        "id",
        "linearReference",
        "dependencies"
      ],
      "additionalProperties": false
    },
    "tp.ControlledInfraElement": {
      "type": "object",
      "properties": {
        "dpsGroup": {
          "type": "string"
        },
        "tvpSection": {
          "type": "string"
        }
      },
      "oneOf": [
        {
          "type": "object",
          "required": [
            "dpsGroup"
          ]
        },
        {
          "type": "object",
          "required": [
            "tvpSection"
          ]
        }
      ],
      "additionalProperties": false
    },
    "tp.FieldObjectController": {
      "type": "object",
      "description": "Defines a Field Object Controller",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identity of the object; used for referencing ; structure refers to EULYNX EU.SAS.77"
        },
        "controlledInfraElements": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tp.ControlledInfraElement"
          },
          "minItems": 1
        },
        "rastaId": {
          "type": "string",
          "description": "defines EULYNX RaSTA identifier for the field object controller"
        },
        "eulynxBaseline": {
          "type": "string",
          "description": "defines EULYNX baseline for the filed object controller"
        },
        "version": {
          "type": "integer",
          "minimum": 0,
          "description": "defines the EULYNX field object controller version"
        },
        "belongsToAoc": {
          "type": "string",
          "description": "defines the Area of Control to which this field object controller belongs to"
        }
      },
      "required": [
        "id",
        "controlledInfraElements",
        "rastaId",
        "eulynxBaseline",
        "belongsToAoc"
      ],
      "additionalProperties": false
    },
    "infra.TopologicalCoordinate": {
      "type": "object",
      "description": "Defines a topological coordinates on the track",
      "properties": {
        "onLinearElement": {
          "type": "string",
          "description": "is positioned on linear element"
        },
        "offsetFromOrigin": {
          "type": "integer",
          "minimum": 0,
          "description": "position on the associated NetElement"
        }
      },
      "required": [
        "onLinearElement"
      ],
      "additionalProperties": false
    },
    "infra.NetLinearReference": {
      "type": "object",
      "description": "Defines a linked path on the topology",
      "properties": {
        "startsAt": {
          "type": "object",
          "$ref": "#/definitions/infra.TopologicalCoordinate",
          "description": "Definesthe starting coordinate of a linear reference"
        },
        "endsAt": {
          "type": "object",
          "$ref": "#/definitions/infra.TopologicalCoordinate",
          "description": "Defines the ending coordinate of a linear reference."
        },
        "hasSequence": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Defines a sequence of linearElements from the start to the end excluding those defined in startAt- and endsAt-TopologicalCoodinates."
        }
      },
      "required": [
        "startsAt",
        "endsAt"
      ],
      "additionalProperties": false
    },
    "infra.NetAreaReference": {
      "type": "object",
      "description": "Represents an area reference in the network.",
      "properties": {
        "includes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/infra.NetLinearReference"
          },
          "minItems": 1,
          "description": "List of linear references included in an network area reference."
        }
      },
      "required": [
        "includes"
      ],
      "additionalProperties": false
    },
    "tp.AreaOfControl": {
      "type": "object",
      "description": "Defines the Area of Control of a system like Traffic CS, MBS/APS, TMS, PE/EAL, ....",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identity of the system"
        },
        "name": {
          "type": "string",
          "description": "User-friendly name, only if different from id"
        },
        "area": {
          "type": "object",
          "$ref": "#/definitions/infra.NetAreaReference",
          "description": "composes of linked area"
        },
        "iPAddress": {
          "type": "string",
          "description": "defines the ip address for communication purposes"
        },
        "rastaId": {
          "type": "string",
          "description": "defines EULYNX RaSTA identifier for the field object controller"
        },
        "portNumber": {
          "type": "integer",
          "minimum": 0,
          "description": "defines the port number for communication purposes"
        }
      },
      "required": [
        "id",
        "area",
        "iPAddress",
        "rastaId"
      ],
      "additionalProperties": false
    },
    "tp.TrainProtectionArea": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "dpsGroups": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tp.DriveProtectionSectionGroup"
          }
        },
        "allocationSections": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tp.AllocationSection"
          }
        },
        "fieldObjectControllers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/tp.FieldObjectController"
          }
        },
        "areaOfControl": {
          "type": "object",
          "$ref": "#/definitions/tp.AreaOfControl"
        }
      },
      "required": [
        "id",
        "areaOfControl"
      ],
      "additionalProperties": false
    }
  },
  "type": "object",
  "properties": {
    "tpArea": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/tp.TrainProtectionArea"
      }
    }
  },
  "additionalProperties": false
}