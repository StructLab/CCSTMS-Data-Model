{
  "$id": "https://ERJU/opp_OperationalPlanMovement",
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "opp.PhysicalTrainUnitIdentifier": {
      "type": "object",
      "description": "Defines a set of possible identifiers for a physical train (ETCS-trainRunningNumber, OBU-ID etc).",
      "properties": {
        "trainRunningNumber": {
          "type": "string",
          "description": "Defines the Train Running Number for ETCS same as SS026.NID_OPERATIONAL. To be usable for ETCS must contain a decimal number [0..99999999]. Mapping to uint32 by filling with F: '1233' -> 0x1233FFFF"
        },
        "additionalTrainRunningNumber": {
          "type": "string",
          "description": "Defines the distinction between Operational Train Units with the same trainRunningNumber. This may occur if a trainRunningNumber is reused for different spare trains."
        },
        "tafTapTsiTrainID": {
          "type": "string",
          "description": "refers to taf tap tsi train id"
        },
        "leadingOnBoardUnitId": {
          "type": "string",
          "description": "Defines NID_ENGINE. To be usable with ETCS must contain a decimal number [0..16.777.215]"
        }
      },
      "additionalProperties": false
    },
    "opp.OperationalTrainCategory": {
      "type": "object",
      "description": "Defines usage category for an OperationalTrain",
      "properties": {
        "trainCategoryType": {
          "type": "string",
          "enum": [
            "trainCategoryUnknown",
            "interregional",
            "regional",
            "subUrban",
            "nightTrain",
            "motorRail",
            "mountainTrain",
            "historicTrain",
            "coachGroup",
            "tram",
            "underground",
            "highspeedTrain",
            "intercity"
          ]
        },
        "description": {
          "type": "string",
          "description": "Defines the description for the operational train categoryfor UI-purposes"
        },
        "trainUsage": {
          "type": "string",
          "enum": [
            "trainUsageUndefined",
            "commercialPassengerTrain",
            "commercialCargoTrain",
            "locomotiveRunningLight",
            "lightRunning",
            "notInService",
            "engineeringTrain",
            "breakdownTrain",
            "mixedTrain",
            "specialTrain",
            "otherTrain"
          ],
          "description": "Defines the train usage type for UI-purposes"
        }
      },
      "required": [
        "description"
      ],
      "additionalProperties": false
    },
    "opp.OnBoardExtension": {
      "type": "object",
      "description": "A container class for a non-standard key-value-property. Messages need sometimes IM-specific information.",
      "properties": {
        "contentType": {
          "type": "string",
          "description": "Defines the key-attribute in a key-value-pair. Used for annotation of IM-specific onboard-equipment"
        },
        "content": {
          "type": "string",
          "contentEncoding": "base64",
          "description": "Defines the value-attribute in a key-value-pair. Used for annotation of IM-specific onboard-equipment"
        }
      },
      "required": [
        "contentType",
        "content"
      ],
      "additionalProperties": false
    },
    "opp.SupportedOnBoardEquipment": {
      "type": "object",
      "description": "Defines Onboard equipment installed and active on a train",
      "properties": {
        "trainProtectionType": {
          "type": "string",
          "enum": [
            "Etcs"
          ],
          "description": "Defines the train protection type supported by the on board equipment"
        },
        "etcsSystemVersions": {
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "\\\\d+.\\\\d+"
          },
          "minItems": 1,
          "description": "Defines the supported etcs system versions"
        },
        "onboardExtensions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/opp.OnBoardExtension"
          }
        }
      },
      "required": [
        "etcsSystemVersions"
      ],
      "additionalProperties": false
    },
    "opp.OperationalConsist": {
      "type": "object",
      "description": "Defines a rolling-stock consist unit identified by the installed onboard equipment.",
      "properties": {
        "supportedOnBoardEquipment": {
          "type": "object",
          "$ref": "#/definitions/opp.SupportedOnBoardEquipment",
          "description": "Defines the list of supported onboard equipment for an operational consist"
        }
      },
      "required": [
        "supportedOnBoardEquipment"
      ],
      "additionalProperties": false
    },
    "opp.TrainUnit": {
      "type": "object",
      "description": "Defines rolling stock, which is used to implement part of a train movement.",
      "properties": {
        "physicalTrainUnit": {
          "type": "object",
          "$ref": "#/definitions/opp.PhysicalTrainUnitIdentifier",
          "description": "Defines the physical train unit to be used in Plan Execution user interface of Workbench (fallback level for TMS)"
        },
        "operationalTrainCategory": {
          "type": "object",
          "$ref": "#/definitions/opp.OperationalTrainCategory",
          "description": "Defines the category type for the train in operational plan. To be used inPlan Execution user interface of Workbench (fallback level for TMS)"
        },
        "operationalConsists": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/opp.OperationalConsist"
          },
          "minItems": 1,
          "description": "Defines operational consists building the TrainUnit starting from the train-head."
        },
        "nominalRotatingMass": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the nominal rotating mass of the train,special value 0=unknown"
        },
        "regularBrakeWeightPercentage": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the regular brake weight percentage. Use 0 if undefined"
        },
        "emergencyBrakeWeightPercentage": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the emergency brake weight percentage. Use zero if undefined"
        },
        "brakePosition": {
          "type": "string",
          "enum": [
            "passengerTrainInP",
            "passengerTrainInR",
            "freightTrainInP",
            "freightTrainInG",
            "brakePositionUnknown"
          ],
          "description": "Defines the active brake position for the train"
        },
        "brakeModelType": {
          "type": "string",
          "enum": [
            "lambda",
            "gamma",
            "undefined"
          ],
          "description": "Defines the applicable brake model type for the train"
        },
        "atoGradeAutomation": {
          "type": "string",
          "enum": [
            "GoAUnknown",
            "GoA1",
            "GoA2",
            "GoA3",
            "GoA4"
          ],
          "description": "Defines the ato grade of automation for the train"
        },
        "scheduledTrainLength": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the scheduled train length in meters"
        }
      },
      "required": [
        "physicalTrainUnit",
        "operationalTrainCategory",
        "operationalConsists"
      ],
      "additionalProperties": false
    },
    "infra.NetPointReference": {
      "type": "object",
      "description": "Represents a point reference in the network.",
      "properties": {
        "hasTopoCoordinate": {
          "type": "object",
          "$ref": "#/definitions/infra.TopologicalCoordinate",
          "description": "Defines the topological coordinate of a network point reference"
        },
        "appliesToDirection": {
          "type": "string",
          "enum": [
            "both",
            "same",
            "opposite"
          ],
          "description": "The direction relative to the origin of the linear element towards the point reference applies"
        }
      },
      "required": [
        "hasTopoCoordinate"
      ],
      "additionalProperties": false
    },
    "opp.TrainUnitActivity": {
      "type": "object",
      "description": "Defines, what happens with the rolling stock at this location.",
      "properties": {
        "trainUnitActivityType": {
          "type": "string",
          "enum": [
            "joinActivity",
            "splitActivity",
            "collectActivity",
            "dropActivity",
            "turnAroundActivity",
            "meetActivity",
            "otherActivity"
          ],
          "description": "Defines the train unit activity type"
        },
        "actualTrainUnitIndex": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the index of TrainUnit in OperationalMovement. operationalTrainUnits before the activity"
        },
        "targetTrainUnitIndex": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the index of TrainUnit in OperationalMovement. operationalTrainUnits after the activity"
        }
      },
      "additionalProperties": false
    },
    "opp.DoorActivity": {
      "type": "object",
      "description": "Defines which doors shall be open and how they shall be open.",
      "properties": {
        "openingDoorSide": {
          "type": "string",
          "enum": [
            "doorSideLeft",
            "doorSideRight",
            "doorSideBoth",
            "doorNoneSide",
            "doorSideUnknown"
          ],
          "description": "Defines the door opening side. noneSide if the doors are kept closed.noneSide if the doors are kept closed"
        },
        "centralisedOpening": {
          "type": "boolean",
          "description": "Defines if the doors can be centrally opened. true - centralised opening, false - opening by passengers/driver"
        },
        "automaticClosing": {
          "type": "boolean",
          "description": "Defines if automatic closing of doors is performed by ATO or not. True by ATO, false - without ATO"
        }
      },
      "additionalProperties": false
    },
    "opp.AdditionalEventTime": {
      "type": "object",
      "description": "Definestimes not required for ATO, but useful for CDAS (e.g. published arrival, plannedArrival etc.)",
      "properties": {
        "timeValue": {
          "type": "string",
          "format": "date-time",
          "description": "Defines the time value in UTC"
        },
        "timeType": {
          "type": "string",
          "enum": [
            "plannedArrival",
            "plannedDeparture",
            "plannedMinDwellTime",
            "publishedArrival",
            "publishedDeparture"
          ],
          "description": "Defines the time type for a stop description"
        }
      },
      "required": [
        "timeValue"
      ],
      "additionalProperties": false
    },
    "opp.StopDescription": {
      "type": "object",
      "description": "Defines activities to be implemented by the train when it stopps.",
      "properties": {
        "trainUnitActivities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/opp.TrainUnitActivity"
          },
          "description": "Defines the sequence of changes of TrainUnit during the stop"
        },
        "doorActivity": {
          "type": "object",
          "$ref": "#/definitions/opp.DoorActivity",
          "description": "Defines the door activity. If the attribute is not provided, the doors remain closed"
        },
        "relaxedCoupler": {
          "type": "boolean",
          "description": "Defines the state of coupler. true - request for coupler relaxation, false -not, see Q_Relaxed_Coupler in SS126"
        },
        "holdTrain": {
          "type": "boolean",
          "description": "Defines, that if the train shall be hold until the next update. See JP in SS126"
        },
        "scheduledDeparture": {
          "type": "string",
          "format": "date-time",
          "description": "Defines the scheduled departure time. see departure in SS126. In the last station it is 'end of mission', in UTC."
        },
        "scheduledMinDwellTime": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines if the train has to wait after actual arrival this number of seconds before departure. ActualEarliestDeparture = max(departure, arrival + minDwellTime) will be calculated by ATO-OB, see minDwellTime in SS126"
        },
        "additionalEventTimes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/opp.AdditionalEventTime"
          },
          "maxItems": 4,
          "description": "Defines the state of coupler. true - request for coupler relaxation, false -not, see Q_Relaxed_Coupler in SS126"
        }
      },
      "required": [
        "scheduledDeparture"
      ],
      "additionalProperties": false
    },
    "opp.OperationalEventRef": {
      "type": "object",
      "description": "Defines a reference to one of possible OperationalEvents (as a unit)",
      "properties": {
        "movementEvent": {
          "type": "string",
          "description": "refers a movement event including the movement plan"
        },
        "restrictionEvent": {
          "type": "string",
          "description": "Refers a restriction event including restriction plan"
        },
        "warningMeasureEvent": {
          "type": "string",
          "description": "Refers a warnning measure event including the warning plan"
        }
      },
      "oneOf": [
        {
          "type": "object",
          "required": [
            "movementEvent"
          ]
        },
        {
          "type": "object",
          "required": [
            "restrictionEvent"
          ]
        },
        {
          "type": "object",
          "required": [
            "warningMeasureEvent"
          ]
        }
      ],
      "additionalProperties": false
    },
    "opp.MovementEvent": {
      "type": "object",
      "description": "Defines an operational activity on a specific point in space and time for a train run.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Defines the Identity of the object; used for referencing"
        },
        "plannedType": {
          "type": "string",
          "enum": [
            "pass",
            "stop"
          ],
          "description": "Defines if stop or pass was planned"
        },
        "scheduledType": {
          "type": "string",
          "enum": [
            "pass",
            "stop"
          ],
          "description": "Defines if stop or pass is scheduled"
        },
        "alignment": {
          "type": "string",
          "enum": [
            "head",
            "center",
            "rear"
          ],
          "description": "Defines the train-alignment at position (head, center, end)"
        },
        "position": {
          "type": "object",
          "$ref": "#/definitions/infra.NetPointReference",
          "description": "Defines position on a linearElement for the movement event"
        },
        "pathToNextEvent": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Defines the path-part after the LinearElement of the position-value and beforethe linear element of the nextEvent (excluding). The path must be reconstructable without graph-search algorithms."
        },
        "stopDescription": {
          "type": "object",
          "$ref": "#/definitions/opp.StopDescription",
          "description": "Defines the stop description in case of a stop of the train"
        },
        "scheduledArrival": {
          "type": "string",
          "format": "date-time",
          "description": "Defines the scheduled arrival time. equal to scheduledDeparture for a passing train, see latestArrival inSS126. In the first station it is time of 'start of mission', in UTC"
        },
        "scheduledArrivalWindow": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines the scheduled arrival window. scheduledEaliestArrival = scheduledArrival - scheduledArrivalWindow. For passing trains scheduledEarliestDeparture = scheduledEarliestArrival, see arrivalWindow in SS126. In the first station it is a time window for 'start of mission'."
        },
        "startsAfterEvents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/opp.OperationalEventRef"
          },
          "description": "Defines the set of operational events, which must be finished before the current event starts."
        }
      },
      "required": [
        "id",
        "position",
        "scheduledArrival"
      ],
      "additionalProperties": false
    },
    "infra.TopologicalCoordinate": {
      "type": "object",
      "description": "Defines a topological coordinate on the track",
      "properties": {
        "onLinearElement": {
          "type": "string",
          "description": "is positioned on linear element"
        },
        "offsetFromOrigin": {
          "type": "integer",
          "minimum": 0,
          "description": "position on the associated NetElement"
        }
      },
      "required": [
        "onLinearElement"
      ],
      "additionalProperties": false
    },
    "infra.NetLinearReference": {
      "type": "object",
      "description": "Defines a linked path on the topology",
      "properties": {
        "startsAt": {
          "type": "object",
          "$ref": "#/definitions/infra.TopologicalCoordinate",
          "description": "Definesthe starting coordinate of a linear reference"
        },
        "endsAt": {
          "type": "object",
          "$ref": "#/definitions/infra.TopologicalCoordinate",
          "description": "Defines the ending coordinate of a linear reference."
        },
        "hasSequence": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Defines a sequence of linearElements from the start to the end excluding those defined in startAt- and endsAt-TopologicalCoodinates."
        }
      },
      "required": [
        "startsAt",
        "endsAt"
      ],
      "additionalProperties": false
    },
    "opp.SpeedRestriction": {
      "type": "object",
      "properties": {
        "maxSpeed": {
          "type": "integer",
          "minimum": 0,
          "description": "defines maximum speed"
        },
        "restrictionEndsAtTrainFront": {
          "type": "boolean",
          "description": "normally false, but for disturbed level crossings, the train can accelerate as soon as the train-front passed the level crossing. In this case should be true"
        }
      },
      "additionalProperties": false
    },
    "opp.DPSGroupsList": {
      "type": "object",
      "description": "Defines a set of Drive-Protection-Section-Groups",
      "properties": {
        "dpsGroups": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Defines the list of DPS Groups"
        }
      },
      "additionalProperties": false
    },
    "opp.SpecificMovementRestriction": {
      "type": "object",
      "description": "Defines single aspect of the train specific restriction",
      "properties": {
        "speedRestriction": {
          "type": "object",
          "$ref": "#/definitions/opp.SpeedRestriction"
        },
        "adhesionCategory": {
          "type": "string",
          "enum": [
            "dryRailHigh",
            "dryRailMedium",
            "dryRailLow",
            "lowAdhesion",
            "veryLowAdhesion",
            "extremelyLowAdhesion",
            "unknownAdhesion"
          ],
          "description": "Defines the different adhesion categories applicable for the train as per track conditions"
        },
        "maxCurrent": {
          "type": "integer",
          "minimum": 0,
          "description": "Defines max current value, s. item 0.33 in SS126"
        },
        "atoInhibition": {
          "type": "boolean",
          "description": "train section is not contantly monitored, or stimulate driver's attention, or approaching overcrouded station"
        },
        "dasInhibition": {
          "type": "boolean",
          "description": "Defines the Driver advisory system inhibition zone"
        },
        "excludedDPSGroupsForFlankProtection": {
          "type": "object",
          "$ref": "#/definitions/opp.DPSGroupsList",
          "description": "Defines the list of DPSGroups to be excluded from flank protection calculation."
        }
      },
      "oneOf": [
        {
          "type": "object",
          "required": [
            "speedRestriction"
          ]
        },
        {
          "type": "object",
          "required": [
            "adhesionCategory"
          ]
        },
        {
          "type": "object",
          "required": [
            "maxCurrent"
          ]
        },
        {
          "type": "object",
          "required": [
            "atoInhibition"
          ]
        },
        {
          "type": "object",
          "required": [
            "dasInhibition"
          ]
        },
        {
          "type": "object",
          "required": [
            "excludedDPSGroupsForFlankProtection"
          ]
        }
      ],
      "additionalProperties": false
    },
    "opp.MovementRestriction": {
      "type": "object",
      "description": "Defines train specific restriction along its path.",
      "properties": {
        "restrictedPath": {
          "type": "object",
          "$ref": "#/definitions/infra.NetLinearReference",
          "description": "Defines the restricted path associated to a restriction of on an operational plan movement"
        },
        "specificRestriction": {
          "type": "object",
          "$ref": "#/definitions/opp.SpecificMovementRestriction",
          "description": "Defines the specific restriction active on the restriction path associated to an operational plan movement"
        }
      },
      "required": [
        "restrictedPath",
        "specificRestriction"
      ],
      "additionalProperties": false
    }
  },
  "type": "object",
  "description": "Defines a train run with a dedicated train number.",
  "properties": {
    "id": {
      "type": "string",
      "description": "Defines the Identity of the object; used for referencing"
    },
    "issuedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Defines the issue-point in time with microsecond-precision builds a version-id for acknowledgements and validity-estimations, in UTC"
    },
    "configurationDataVersionRef": {
      "type": "string",
      "description": "Defines the configuration data version for which the operational plan is valid"
    },
    "includesEndOfJourney": {
      "type": "boolean",
      "description": "Defines if the operational plan movement include the end of journey. if true, the movementEvents contains entire remaining path including the end position, otherwise the journey will continue after the last movementEvent of this object"
    },
    "operationalTrainUnits": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/opp.TrainUnit"
      },
      "minItems": 1,
      "description": "Defines the set of train units, which are active during some paths of the train movement. The same train unit can be used in not connected parts of the path"
    },
    "movementEvents": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/opp.MovementEvent"
      },
      "minItems": 1,
      "description": "Defines times/operational activities sequence along the movement"
    },
    "movementRestrictions": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/opp.MovementRestriction"
      },
      "description": "Defines train specific restrictions, which are active along its path-sections"
    }
  },
  "required": [
    "id",
    "issuedAt",
    "configurationDataVersionRef",
    "operationalTrainUnits",
    "movementEvents"
  ],
  "additionalProperties": false
}