{
  "$id": "https://ERJU/generic_Equipment",
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "definitions": {
    "generic.Controller": {
      "type": "object",
      "description": "The controller class is used to represent any controller that an equipment might have.",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "systemDescription": {
          "type": "string",
          "description": "Controller Type and Version Number (manufacturer defined)"
        },
        "operatingSystem": {
          "type": "string",
          "description": "Operating system of controller unit. It contains the information needed to identify the specific version of the OS (example: distribution, main version and kernel version)."
        },
        "operationStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Booting",
            "InOperation",
            "Fallback"
          ],
          "description": "Indicates the operation status of the controller."
        },
        "coolingFanStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Normal",
            "Degraded",
            "Failure"
          ],
          "description": "Indicates the current status of the cooling fan."
        },
        "temperatureStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Normal",
            "TooHigh"
          ],
          "description": "Indicates the temperature status of the CPU."
        },
        "cpuHealthStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Normal",
            "Degraded",
            "Failure"
          ],
          "description": "Indicates the health status of the CPU."
        },
        "cpuLoadStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Normal",
            "High",
            "Critical"
          ],
          "description": "Indicates the load status of the CPU."
        },
        "ramSize": {
          "type": "integer",
          "minimum": 0,
          "description": "Indicates the total available RAM in megabytes (MB)."
        },
        "ramHealthStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Normal",
            "Degraded",
            "Failure"
          ],
          "description": "Indicates the health status of the RAM."
        },
        "bootingLastDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Indicates the date and time on which the last booting of the controller happened."
        },
        "bootingLastReason": {
          "type": "string",
          "enum": [
            "Unknown",
            "OnSite",
            "RemoteMdm",
            "InternalMaintenanceOk",
            "InternalMaintenanceFailure",
            "InternalFailure"
          ],
          "description": "Indicates the type of the latest reset (The reason for the reset)."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.PhysicalNetworkInterface": {
      "type": "object",
      "description": "Represents 1 instance of 1 networking interface talking to 1 PoS-Signalling interface.",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "macAddress": {
          "type": "string",
          "description": "MAC Address of the interface in the FieldElement."
        },
        "operationStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "NotAvialableNotConnected",
            "AvailableNotConnected",
            "Connected",
            "NotConnectedDisturbed"
          ],
          "description": "Indicates the operation status of the PhysicalNetworkInterface."
        },
        "nominalBandwidth": {
          "type": "integer",
          "minimum": 0,
          "description": "States the nominal bandwidth in Mbits of physical network interface."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        }
      },
      "required": [
        "id",
        "macAddress"
      ],
      "additionalProperties": false
    },
    "generic.StorageMediumFlashMemory": {
      "type": "object",
      "description": "Contains attributes of flash memory storage.",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "memorySize": {
          "type": "integer",
          "minimum": 0,
          "description": "Indicates memory of the storage medium in megabytes (MB)."
        },
        "temperatureStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Normal",
            "TooHigh"
          ],
          "description": "Indicates the temperature status of the storage medium."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "wearStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "Nok"
          ],
          "description": "Wear status of the flash memory in the storage medium."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.PowerSupply": {
      "type": "object",
      "description": "Contains general purpose attributes of the power supply within the connected system.",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "inputVoltageStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "NotUsed",
            "Undervoltage",
            "Nominal",
            "Overvoltage"
          ],
          "description": "Indicates the input voltage status."
        },
        "outputVoltageStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "NotUsed",
            "Undervoltage",
            "Nominal",
            "Overvoltage"
          ],
          "description": "Indicates the output voltage status."
        },
        "outputPower": {
          "type": "integer",
          "minimum": 0,
          "description": "Indicates the output power."
        },
        "outputPowerLimit": {
          "type": "integer",
          "minimum": 0,
          "description": "Indicates the maximally supported output power."
        },
        "temperatureStatus": {
          "type": "string",
          "enum": [
            "Unknown",
            "Normal",
            "TooHigh"
          ],
          "description": "Indicates the temperature status of the power supply."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "inputVoltage": {
          "type": "number",
          "description": "Input voltage."
        },
        "inputCurrent": {
          "type": "number",
          "description": "Input current."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.PhysicalDigitalOutput": {
      "type": "object",
      "description": "PhysicalDigitalOutput",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "physicalOutputValue": {
          "type": "string",
          "enum": [
            "Unknown",
            "High",
            "Low"
          ],
          "description": "Indicates whether the physical channel is 'on' (high) or 'off' (low)."
        },
        "outputVoltage": {
          "type": "number",
          "description": "Output voltage (analog value), Physical unit : Volt"
        },
        "outputCurrent": {
          "type": "number",
          "description": "Output current (analog value), Physical unit : Amp\u00c3\u00a8re"
        }
      },
      "required": [
        "id",
        "label"
      ],
      "additionalProperties": false
    },
    "generic.PhysicalAnalogOutput": {
      "type": "object",
      "description": "PhysicalAnalogOutput",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "voltage": {
          "type": "number",
          "description": "Indicates the generated voltage of the analog output."
        },
        "current": {
          "type": "number",
          "description": "Indicates the measured current at the analog output."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.PhysicalSeparatedOutput": {
      "type": "object",
      "description": "Contains attributes of a physically separated output.",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "outputValue": {
          "type": "string",
          "enum": [
            "Unknown",
            "On",
            "Off"
          ],
          "description": "Output value."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.PhysicalDigitalInput": {
      "type": "object",
      "description": "PhysicalDigitalInput",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "physicalInputValue": {
          "type": "string",
          "enum": [
            "Unknown",
            "High",
            "Low"
          ],
          "description": "Indicates whether the physical channel is 'on' (high) or 'off' (low)."
        },
        "inputVoltage": {
          "type": "number",
          "description": "Input voltage (analog value), Physical unit : Volt"
        },
        "inputCurrent": {
          "type": "number",
          "description": "Input current (analog value), Physical unit : Amp\u00c3\u00a8re"
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.PhysicalAnalogInput": {
      "type": "object",
      "description": "PhysicalAnalogInput",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "voltage": {
          "type": "number",
          "description": "Indicates the measured voltage at the analog input."
        },
        "current": {
          "type": "number",
          "description": "Indicates the measured current at the analog input."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.PhysicalSeparatedInput": {
      "type": "object",
      "description": "Contains attributes of a physically separated input.",
      "properties": {
        "id": {
          "type": "string"
        },
        "statusTechnical": {
          "type": "string",
          "enum": [
            "Unknown",
            "Ok",
            "Warning",
            "FailureNonCritical",
            "FailureCritical"
          ],
          "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
        },
        "statusTechnicalManufacturerSpecificMessage": {
          "type": "string",
          "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "inputValue": {
          "type": "string",
          "enum": [
            "Unknown",
            "On",
            "Off"
          ],
          "description": "Input value."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.InputSwitch": {
      "type": "object",
      "description": "Input device with toggle input.",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "inputSwitchPosition": {
          "type": "string",
          "enum": [
            "Unknown",
            "Position1",
            "Position2",
            "Position3"
          ],
          "description": "Input toggle position."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    },
    "generic.InputButton": {
      "type": "object",
      "description": "Input device with touch input.",
      "properties": {
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
        },
        "isPressed": {
          "type": "boolean",
          "description": "True: Button is pressed."
        }
      },
      "required": [
        "id"
      ],
      "additionalProperties": false
    }
  },
  "type": "object",
  "description": "The equipment class is used to represent the physical view of the system. Equipment classes represent unique instances down to at least the line replaceable units (hierarchical structure of equipment classes, parent-child). Linking multiple equipment classes allows manufacturers to represent their specific system.",
  "properties": {
    "id": {
      "type": "string"
    },
    "statusTechnical": {
      "type": "string",
      "enum": [
        "Unknown",
        "Ok",
        "Warning",
        "FailureNonCritical",
        "FailureCritical"
      ],
      "description": "Technical Status of the system, that represents the aggregated status of all hierarchical lower systems. This allows to have a top level information on the status of the system which can be drilled down if the system is in any other state than Ok."
    },
    "statusTechnicalManufacturerSpecificMessage": {
      "type": "string",
      "description": "Must be used by the supplier to describe the reasons for a StatusTechnical != OK, that cannot be explained by existing datapoints (NOT including IM and manufacturer specific diagnostic messages). This Information MUST be provided from the supplier. This should provide flexibility for future uses. Multiple states can be indicated at the same time if multiple diagnosis have not been included in the model during the design phase. The supplier specific reason may not overlap with reasons already covered in other attributes."
    },
    "manufacturer": {
      "type": "string",
      "description": "The name of the manufacturer of the equipment."
    },
    "manufacturerModel": {
      "type": "string",
      "description": "The name of the equipment model."
    },
    "serialNumber": {
      "type": "string",
      "description": "Number defined and provided by the manufacturer. The serial number combined with the manufacturer information must be unique. Every replaceable component must be represented by a class 'Equipment', which must be visually marked with its serial number."
    },
    "hardwareRevision": {
      "type": "string",
      "description": "The data point hardwareRevision indicates the hardware revision level of the equipment. Hardware can only be changed by replacing an instance of Equipment."
    },
    "softwareRevision": {
      "type": "string",
      "description": "The data point softwareRevision (not interface revision) indicates the software revision level of the equipment. It contains the information to identify all software components, including firmware. It does not include changes in the configuration data. The format and semantics are defined by the manufacturer."
    },
    "replacementIndication": {
      "type": "string",
      "enum": [
        "Unknown",
        "ReplacementNotNeeded",
        "ReplaceableAtOperation",
        "ReplaceableMaintenance",
        "ReplaceableRevalidation"
      ],
      "description": "Indicates when the equipment requests a replacement. The decision to act on this indication is up to the operator, in accordance with the equipment manual."
    },
    "manufacturingDateTime": {
      "type": "string",
      "format": "date-time",
      "description": "Indicates the production date of the equipment."
    },
    "label": {
      "type": "string",
      "description": "It is assigned to all classes representing physically identifiable entities. This string, corresponding to a physically identifiable label, facilitates consistent reference between the physical entities in the field and their digital representations within the model."
    },
    "isTimeSynchronised": {
      "type": "boolean",
      "description": "Indicates whether the last time synchronisation was successful or not. This is important for the subsystem communication and diagnostic data gathering. TRUE: Current time of this subsystem is synchronised."
    },
    "subEquipment": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.Equipment"
      }
    },
    "controller": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.Controller"
      }
    },
    "physicalNetworkInterface": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.PhysicalNetworkInterface"
      }
    },
    "storageMediumFlashMemory": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.StorageMediumFlashMemory"
      }
    },
    "powerSupply": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.PowerSupply"
      }
    },
    "physicalDigitalOutput": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.PhysicalDigitalOutput"
      }
    },
    "physicalAnalogOutput": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.PhysicalAnalogOutput"
      }
    },
    "physicalSeparatedOutput": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.PhysicalSeparatedOutput"
      }
    },
    "physicalDigitalInput": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.PhysicalDigitalInput"
      }
    },
    "physicalAnalogInput": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.PhysicalAnalogInput"
      }
    },
    "physicalSeparatedInput": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.PhysicalSeparatedInput"
      }
    },
    "inputSwitch": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.InputSwitch"
      }
    },
    "inputButton": {
      "type": "array",
      "items": {
        "type": "object",
        "$ref": "#/definitions/generic.InputButton"
      }
    }
  },
  "required": [
    "id",
    "manufacturer",
    "manufacturerModel",
    "serialNumber",
    "hardwareRevision",
    "softwareRevision",
    "manufacturingDateTime"
  ],
  "additionalProperties": false
}